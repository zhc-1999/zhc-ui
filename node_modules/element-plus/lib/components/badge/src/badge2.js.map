{"version":3,"file":"badge2.js","sources":["../../../../../../packages/components/badge/src/badge.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <slot></slot>\n    <transition name=\"el-zoom-in-center\">\n      <sup\n        v-show=\"!hidden && (content || content === '0' || isDot)\"\n        :class=\"[\n          ns.e('content'),\n          ns.em('content', type),\n          ns.is('fixed', !!$slots.default),\n          ns.is('dot', isDot),\n        ]\"\n        v-text=\"content\"\n      >\n      </sup>\n    </transition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { badgeProps } from './badge'\n\nexport default defineComponent({\n  name: 'ElBadge',\n\n  props: badgeProps,\n\n  setup(props) {\n    const ns = useNamespace('badge')\n\n    const content = computed<string>(() => {\n      if (props.isDot) return ''\n\n      if (typeof props.value === 'number' && typeof props.max === 'number') {\n        return props.max < props.value ? `${props.max}+` : `${props.value}`\n      }\n      return `${props.value}`\n    })\n\n    return {\n      ns,\n      content,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","badgeProps","useNamespace","computed","_openBlock","_renderSlot","_createElementVNode","_normalizeClass"],"mappings":";;;;;;;;;;AAwBA,MAAK,YAAaA,oBAAa;AAAA,EAC7B,MAAM;AAAA,EAEN,OAAOC;AAAA,EAEP,MAAM,OAAO;AACX,UAAM,KAAKC,mBAAa;AAExB,UAAM,UAAUC,aAAiB,MAAM;AACrC,UAAI,MAAM;AAAO,eAAO;AAExB,UAAI,OAAO,MAAM,UAAU,YAAY,OAAO,MAAM,QAAQ,UAAU;AACpE,eAAO,MAAM,MAAM,MAAM,QAAQ,GAAG,MAAM,SAAS,GAAG,MAAM;AAAA;AAE9D,aAAO,GAAG,MAAM;AAAA;AAGlB,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAAA;;2BA1CJ,wBAeM;SAfKC,wCAAM;AAAA;KACf;AAAA,IACAC,oBAYa;AAAA,oCADL;AAAA,2BAVN;AAAA,2BAEQC;AAAA,UAAc,OAAEC,mBAAE;AAAA,YAAuB,QAAG,EAAE;AAAA,YAA6B,QAAG,GAAE,WAAY;AAAA,YAA2B,QAAG,GAAE,SAAQ,cAAK;AAAA;;;qBAD3H,aAAW;AAAA;;;;;;;;;;;"}