export declare const ElPopconfirm: import("../../utils/types").SFCWithInstall<import("vue").DefineComponent<{
    teleported: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    title: import("../../utils/props").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    confirmButtonText: import("../../utils/props").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    cancelButtonText: import("../../utils/props").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    confirmButtonType: import("../../utils/props").BuildPropReturn<StringConstructor, "primary", unknown, "" | "default" | "primary" | "success" | "warning" | "info" | "danger" | "text", unknown>;
    cancelButtonType: import("../../utils/props").BuildPropReturn<StringConstructor, "text", unknown, "" | "default" | "primary" | "success" | "warning" | "info" | "danger" | "text", unknown>;
    icon: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>>, any, unknown, unknown, unknown>;
    iconColor: import("../../utils/props").BuildPropReturn<StringConstructor, "#f90", unknown, unknown, unknown>;
    hideIcon: import("../../utils/props").BuildPropReturn<BooleanConstructor, false, unknown, unknown, unknown>;
    hideAfter: import("../../utils/props").BuildPropReturn<NumberConstructor, 200, unknown, unknown, unknown>;
    onConfirm: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<(e: Event) => boolean | Promise<boolean>>, unknown, unknown, unknown, unknown>;
    onCancel: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<(e: Event) => boolean | Promise<boolean>>, unknown, unknown, unknown, unknown>;
}, {
    finalConfirmButtonText: import("vue").ComputedRef<string>;
    finalCancelButtonText: import("vue").ComputedRef<string>;
    tooltipRef: import("vue").Ref<{
        onClose: () => void;
    } | undefined>;
    compatTeleported: import("vue").ComputedRef<boolean>;
    confirm: (e: Event) => void;
    cancel: (e: Event) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    teleported: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    title: import("../../utils/props").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    confirmButtonText: import("../../utils/props").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    cancelButtonText: import("../../utils/props").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    confirmButtonType: import("../../utils/props").BuildPropReturn<StringConstructor, "primary", unknown, "" | "default" | "primary" | "success" | "warning" | "info" | "danger" | "text", unknown>;
    cancelButtonType: import("../../utils/props").BuildPropReturn<StringConstructor, "text", unknown, "" | "default" | "primary" | "success" | "warning" | "info" | "danger" | "text", unknown>;
    icon: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>>, any, unknown, unknown, unknown>;
    iconColor: import("../../utils/props").BuildPropReturn<StringConstructor, "#f90", unknown, unknown, unknown>;
    hideIcon: import("../../utils/props").BuildPropReturn<BooleanConstructor, false, unknown, unknown, unknown>;
    hideAfter: import("../../utils/props").BuildPropReturn<NumberConstructor, 200, unknown, unknown, unknown>;
    onConfirm: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<(e: Event) => boolean | Promise<boolean>>, unknown, unknown, unknown, unknown>;
    onCancel: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<(e: Event) => boolean | Promise<boolean>>, unknown, unknown, unknown, unknown>;
}>>, {
    icon: import("../../utils/props").BuildPropType<import("../../utils/props").PropWrapper<string | import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>>, unknown, unknown>;
    title: string;
    hideAfter: number;
    teleported: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    confirmButtonText: string;
    cancelButtonText: string;
    confirmButtonType: import("../../utils/props").BuildPropType<StringConstructor, "" | "default" | "primary" | "success" | "warning" | "info" | "danger" | "text", unknown>;
    cancelButtonType: import("../../utils/props").BuildPropType<StringConstructor, "" | "default" | "primary" | "success" | "warning" | "info" | "danger" | "text", unknown>;
    iconColor: string;
    hideIcon: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    onConfirm: (e: Event) => boolean | Promise<boolean>;
    onCancel: (e: Event) => boolean | Promise<boolean>;
}>> & Record<string, any>;
export default ElPopconfirm;
export * from './src/popconfirm';
